'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    props: {
        transportCreate: {
            type: String | Function,
            kComposite: 'transport.create'
        },
        transportCreateCache: {
            type: Boolean,
            kComposite: 'transport.create.cache'
        },
        transportCreateContentType: {
            type: String,
            kComposite: 'transport.create.contentType'
        },
        transportCreateData: {
            type: Object | Function,
            kComposite: 'transport.create.data'
        },
        transportCreateDataType: {
            type: String,
            kComposite: 'transport.create.dataType'
        },
        transportCreateType: {
            type: String,
            kComposite: 'transport.create.type'
        },
        transportCreateUrl: {
            type: String | Function,
            kComposite: 'transport.create.url'
        },
        transportDestroy: {
            type: String | Function,
            kComposite: 'transport.destroy'
        },
        transportDestroyCache: {
            type: Boolean,
            kComposite: 'transport.destroy.cache'
        },
        transportDestroyContentType: {
            type: String,
            kComposite: 'transport.destroy.contentType'
        },
        transportDestroyData: {
            type: Object | Function,
            kComposite: 'transport.destroy.data'
        },
        transportDestroyDataType: {
            type: String,
            kComposite: 'transport.destroy.dataType'
        },
        transportDestroyType: {
            type: String,
            kComposite: 'transport.destroy.type'
        },
        transportDestroyUrl: {
            type: String | Function,
            kComposite: 'transport.destroy.url'
        },
        transportParameterMap: {
            type: Function,
            kComposite: 'transport.parameterMap'
        },
        transportPush: {
            type: Function,
            kComposite: 'transport.push'
        },
        transportRead: {
            type: String | Function,
            kComposite: 'transport.read'
        },
        transportReadCache: {
            type: Boolean,
            kComposite: 'transport.read.cache'
        },
        transportReadContentType: {
            type: String,
            kComposite: 'transport.read.contentType'
        },
        transportReadData: {
            type: Object | Function,
            kComposite: 'transport.read.data'
        },
        transportReadDataType: {
            type: String,
            kComposite: 'transport.read.dataType'
        },
        transportReadType: {
            type: String,
            kComposite: 'transport.read.type'
        },
        transportReadUrl: {
            type: String | Function,
            kComposite: 'transport.read.url'
        },
        transportSignalrClientCreate: {
            type: String,
            kComposite: 'transport.signalr.client.create'
        },
        transportSignalrClientDestroy: {
            type: String,
            kComposite: 'transport.signalr.client.destroy'
        },
        transportSignalrClientRead: {
            type: String,
            kComposite: 'transport.signalr.client.read'
        },
        transportSignalrClientUpdate: {
            type: String,
            kComposite: 'transport.signalr.client.update'
        },
        transportSignalrHub: {
            type: Object,
            kComposite: 'transport.signalr.hub'
        },
        transportSignalrPromise: {
            type: Object,
            kComposite: 'transport.signalr.promise'
        },
        transportSignalrServerCreate: {
            type: String,
            kComposite: 'transport.signalr.server.create'
        },
        transportSignalrServerDestroy: {
            type: String,
            kComposite: 'transport.signalr.server.destroy'
        },
        transportSignalrServerRead: {
            type: String,
            kComposite: 'transport.signalr.server.read'
        },
        transportSignalrServerUpdate: {
            type: String,
            kComposite: 'transport.signalr.server.update'
        },
        transportSubmit: {
            type: Function,
            kComposite: 'transport.submit'
        },
        transportUpdate: {
            type: String | Function,
            kComposite: 'transport.update'
        },
        transportUpdateCache: {
            type: Boolean,
            kComposite: 'transport.update.cache'
        },
        transportUpdateContentType: {
            type: String,
            kComposite: 'transport.update.contentType'
        },
        transportUpdateData: {
            type: Object | Function,
            kComposite: 'transport.update.data'
        },
        transportUpdateDataType: {
            type: String,
            kComposite: 'transport.update.dataType'
        },
        transportUpdateType: {
            type: String,
            kComposite: 'transport.update.type'
        },
        transportUpdateUrl: {
            type: String | Function,
            kComposite: 'transport.update.url'
        }
    }
};